---
    layout: post
    title:  "깃허브 페이지 (정석으로) 시작하기"
    date:   2018-02-20 07:31:45.802 -0600
    categories: [ study ]
    tags: [ github.io, 깃허브페이지 ]
---

그렇다. 이 방법은 정석으로 시작하는 방법이다. 그런데 이런 거에 정석이란게 있는 것인가? 그냥 [Jekyll](https://jekyllrb-ko.github.io/) 공식 사이트에서 제안하는 방법이라고 정정하겠다. <!--more-->

맥 계열의 컴퓨터에는 기본적으로 ruby가 설치되어 있어 그냥 `gem install jekell`만 날리면 되는 모양이지만, 본인의 컴퓨터는 우분투이므로 약간의 준비운동이 필요하다.

필요한 패키지를 설치하자.

    $ sudo apt update
    $ sudo apt install ruby ruby-dev libffi-dev git
    $ sudo gem install jekyll

본인의 환경에서는 위의 패키지로 jekyll 까지 설치하는 데에 어려움이 없었지만 혹시 다른 에러가 난다면 구글링을 하여 보자.

터미널에서 명령어만 날려서 새 repository를 만들 수도 있는 모양이지만, 아주 잠깐만 GUI의 혜택을 맛보자. github.com에서 [새 reposittry 만들기](https://github.com/new) 로 들어가서 $(yourname).github.io 의 이름으로 repository를 만들자.

다 끝났으면 해당 repo로 들어가서 웹 주소를 복사하거나 `Clone or download` 버튼을 눌러 주소를 복사한다. 해당 주소를 터미널에서 다음과 같이 입력한다.

    $ git clone https://github.com/$(Yourname)/$(yourname).github.io.git

그럼 (위의 경우라면) $(yourname).github.io 이름으로 폴더가 생겼을 것이다. 해당 폴더로 이동해서 `jekyll new .`를 날리자.

    $ cd $(yourname).github.io
    $ jekyll new .

여기서부터는 여타 github.com repo 관리랑 다를 게 없다. 커밋 후 푸쉬한다. 만약 지금 사용하는 pc에서 git을 처음 사용하는 것이라면 commit하는 사람이 누구인지 설정해야 한다.

    $ git config --global user.email "$(your github.com login email)"
    $ git config --global user.name "$(your github.com nickname)"

이후 다음과 같은 명령어로 repository를 업데이트한다.

    $ git add .
    $ git commit -m 'my babe'
    $ git push origin master

잠시 기다렸다가 https://$(yourname).github.io 주소로 들어가보자. 방금 막 태어난 블로그가 보일 것이다.

새 글을 쓰고 싶은데, 터미널이나 `git push` 등의 편집 환경이 적응이 안된다면, 몇 가지 대안 중에 [porse.io](http://prose.io)를 추천한다. 웹에서 바로 새 포스팅을 올릴 수 있도록 해준다. 

마크다운의 [기본 문법](https://gist.github.com/ihoneymon/652be052a0727ad59601)

Jekyll 에서는 [kramdown](https://kramdown.gettalong.org/syntax.html) 이라는, 마크다운의 상위호환? 격인 문법도 지원한다.

----------------

깃허브 repo에 업로드될 정적 사이트를 실행해 보고자 `jekyll build`를 날렸더니 에러코드를 뿜뿜하는 것이 아닌가? 몇 가지 루비 패키지가 깔리지 않아 생기는 문제였다. 다음 명령어로 두 가지 패키지를 추가로 설치해 주자.

    $ sudo gem install bundler minima

이제 다음 명령어로 빌드 후 웹브라우저에서 업데이트 될 사이트의 모습을 확인할 수 있다.

    $ jekyll serve

웹브라우저를 띄워서 `http://localhost:4000` 또는 `http://127.0.0.1:4000` 으로 접속하자. 혹시 로컬에서 접속하는게 아니라 어디서든 접속하고 싶다면? `--host`를 이용하여 해결할 수 있다.

    $ jekyll serve --host 0.0.0.0

물론 잠깐 확인을 위한 목적이다. 지킬에서 제공하는 서빙 도구는 지속적인 사이트 유지를 위한 목적에는 적합하지 않는다. 어짜피 github에 푸쉬 후 github page의 무료 호스팅을 사용하는 것이 목적이 아니었던가?

이미 사용중인 포트가 있어 기본으로 4000으로 잡혀 있는 포트를 8080으로 바꾸고 싶다면 다음 옵션을 이용하면 된다.

    $ jekyll serve --port 8080
