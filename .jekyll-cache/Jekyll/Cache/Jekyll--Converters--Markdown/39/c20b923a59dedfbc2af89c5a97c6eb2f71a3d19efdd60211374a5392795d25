I"L
<p>그동안 Alibabacloud에서 월 $5의 가장 저렴한 플랜으로 운영하던 Django기반 블로그를 github pages로 이전하였다. 이것저것 만져보니 아무래도 조금 더 손댈 데가 많지만 저렴하게 블로그를 호스팅 가능하다는 부분이 매력적이어서 이전부터 벼르던 일이었다. 포스트는 생각보다 그렇게 많지 않아 사실 Ctrl+C Ctrl+V로 열심히 복붙해도 되긴 했지만, jekyll에서 사용하는 liquid 템플릿 언어와 django의 jinja 구문이 계속 에러를 일으켜 발목을 잡았다. Jinja의 <code class="language-plaintext highlighter-rouge">{% %}</code>와 <code class="language-plaintext highlighter-rouge">{{ }}</code>를 liquid 언어에서도 동일하게 사용하고 있던 까닭이었다. Django의 구문 설명을 위해 예시로 드는 코드 부분이 문제였다.</p>

<p>기존 Django의 DB에서 jekyll 형식의 파일로 구분되는 포스트로 추출하는 것은 어렵지 않았다. <a href="http://griff.steni.us/blog/2017/01/13/from_zinnia_to_jekyll.html">From Django Zinnia Blog to Jekyll Static Sites</a>에서 마침 마땅한 코드를 찾아 조금 손봤다. 여기서는 zinnia의 포스트가 html로 짜여진 상황을 가정하고 있는데, 나는 markdown으로 포스트를 작성했어서 <code class="language-plaintext highlighter-rouge">html2text</code>를 사용할 필요가 없었다. 약간의 손봄 끝에 다음 코드로 쉽게 변환할 수 있었다. 손보는 김에 기존의 category를 긁어와서 포스트에 적용하는 부분도 추가했다.</p>

<figure class="highlight"><pre><code class="language-python" data-lang="python"><span class="c1">#!/usr/bin/env python3
</span>
<span class="c1"># convert_zinnia.py - script for parsing zinnia db blob into jekyll posts
</span>
<span class="kn">import</span> <span class="nn">json</span>
<span class="kn">import</span> <span class="nn">os</span><span class="p">,</span> <span class="n">re</span>
<span class="kn">from</span> <span class="nn">functools</span> <span class="kn">import</span> <span class="nb">reduce</span>

<span class="c1"># import html2text
</span>
<span class="c1"># open database of zinna posts created from django's dumpdb command
</span>
<span class="n">blog_dump_file</span> <span class="o">=</span> <span class="s">'blog_data.json'</span>
<span class="n">blog_file</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="n">blog_dump_file</span><span class="p">)</span>
<span class="n">blog_json</span> <span class="o">=</span> <span class="n">json</span><span class="p">.</span><span class="n">loads</span><span class="p">(</span><span class="n">blog_file</span><span class="p">.</span><span class="n">read</span><span class="p">())</span>

<span class="n">category</span><span class="o">*</span><span class="nb">dict</span> <span class="o">=</span> <span class="p">{</span> <span class="mi">0</span><span class="p">:</span> <span class="s">'*'</span> <span class="p">}</span>

<span class="k">for</span> <span class="n">item</span> <span class="ow">in</span> <span class="n">blog_json</span><span class="p">:</span>

    <span class="k">if</span> <span class="n">item</span><span class="p">[</span><span class="s">'model'</span><span class="p">]</span> <span class="o">==</span> <span class="s">u'zinnia.category'</span><span class="p">:</span>
        <span class="n">category_pk</span> <span class="o">=</span> <span class="n">item</span><span class="p">[</span><span class="s">'pk'</span><span class="p">]</span>
        <span class="n">category_fields</span> <span class="o">=</span> <span class="n">item</span><span class="p">[</span><span class="s">'fields'</span><span class="p">]</span>
        <span class="n">category_slug</span> <span class="o">=</span><span class="n">category_fields</span><span class="p">[</span><span class="s">'slug'</span><span class="p">]</span>
        <span class="n">category_title</span> <span class="o">=</span><span class="n">category_fields</span><span class="p">[</span><span class="s">'title'</span><span class="p">]</span>
        <span class="n">category_dict</span><span class="p">[</span><span class="n">category_pk</span><span class="p">]</span> <span class="o">=</span> <span class="n">category_slug</span>

        <span class="n">category_filename</span> <span class="o">=</span> <span class="s">'%s'</span> <span class="o">%</span> <span class="p">(</span><span class="n">category_slug</span><span class="p">)</span>
        <span class="n">os</span><span class="p">.</span><span class="n">makedirs</span><span class="p">(</span><span class="s">'category'</span><span class="p">,</span> <span class="n">exist_ok</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
        <span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="s">'category/%s.html'</span> <span class="o">%</span> <span class="n">category_slug</span><span class="p">,</span> <span class="s">'w'</span><span class="p">)</span> <span class="k">as</span> <span class="n">new_category</span><span class="p">:</span>
            <span class="n">category_header</span> <span class="o">=</span><span class="s">'''---

layout: category
title: %s
category: %s
---'''</span> <span class="o">%</span> <span class="p">(</span> <span class="n">category_title</span><span class="p">,</span> <span class="n">category_slug</span> <span class="p">)</span>
<span class="n">new_category</span><span class="p">.</span><span class="n">write</span><span class="p">(</span> <span class="n">category_header</span> <span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="n">category_dict</span><span class="p">)</span>

<span class="c1"># go over each item in the dump and create files for zinnia's entries
</span>
<span class="k">for</span> <span class="n">item</span> <span class="ow">in</span> <span class="n">blog_json</span><span class="p">:</span>

    <span class="k">if</span> <span class="n">item</span><span class="p">[</span><span class="s">'model'</span><span class="p">]</span> <span class="o">==</span> <span class="s">u'zinnia.entry'</span><span class="p">:</span>
        <span class="n">fields</span> <span class="o">=</span> <span class="n">item</span><span class="p">[</span><span class="s">'fields'</span><span class="p">]</span>

        <span class="n">title</span> <span class="o">=</span> <span class="n">fields</span><span class="p">[</span><span class="s">'title'</span><span class="p">]</span>
        <span class="n">creation_date</span> <span class="o">=</span> <span class="n">fields</span><span class="p">[</span><span class="s">'creation_date'</span><span class="p">]</span>
        <span class="n">status</span> <span class="o">=</span> <span class="n">fields</span><span class="p">[</span><span class="s">'status'</span><span class="p">]</span>
        <span class="n">slug</span> <span class="o">=</span> <span class="n">fields</span><span class="p">[</span><span class="s">'slug'</span><span class="p">]</span>
        <span class="n">content</span> <span class="o">=</span> <span class="n">fields</span><span class="p">[</span><span class="s">'content'</span><span class="p">]</span>

        <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">fields</span><span class="p">[</span><span class="s">'categories'</span><span class="p">])</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="p">:</span>
            <span class="n">categories</span> <span class="o">=</span> <span class="s">'[ %s ]'</span> <span class="o">%</span> <span class="nb">reduce</span><span class="p">(</span> <span class="k">lambda</span> <span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">:</span> <span class="n">i</span> <span class="o">+</span><span class="s">', '</span> <span class="o">+</span><span class="n">j</span><span class="p">,</span>
                         <span class="nb">list</span><span class="p">(</span> <span class="nb">map</span><span class="p">(</span> <span class="k">lambda</span> <span class="n">x</span><span class="p">:</span> <span class="n">category_dict</span><span class="p">[</span><span class="n">x</span><span class="p">],</span> <span class="n">fields</span><span class="p">[</span><span class="s">'categories'</span><span class="p">]</span> <span class="p">)</span> <span class="p">)</span>
                                     <span class="p">)</span>

        <span class="k">elif</span> <span class="nb">len</span><span class="p">(</span><span class="n">fields</span><span class="p">[</span><span class="s">'categories'</span><span class="p">])</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span>
            <span class="n">categories</span> <span class="o">=</span> <span class="s">'[ %s ]'</span> <span class="o">%</span> <span class="n">category_dict</span><span class="p">[</span><span class="n">fields</span><span class="p">[</span><span class="s">'categories'</span><span class="p">][</span><span class="mi">0</span><span class="p">]]</span>

        <span class="k">else</span> <span class="p">:</span>
            <span class="n">categories</span> <span class="o">=</span><span class="s">'[ ]'</span>

        <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">fields</span><span class="p">[</span><span class="s">'tags'</span><span class="p">].</span><span class="n">split</span><span class="p">(</span><span class="s">','</span><span class="p">)</span> <span class="p">)</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="p">:</span>
            <span class="n">tags</span> <span class="o">=</span> <span class="s">'[ %s ]'</span> <span class="o">%</span> <span class="nb">reduce</span><span class="p">(</span> <span class="k">lambda</span> <span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">:</span> <span class="n">i</span> <span class="o">+</span><span class="s">', '</span> <span class="o">+</span><span class="n">j</span><span class="p">,</span> <span class="n">fields</span><span class="p">[</span><span class="s">'tags'</span><span class="p">].</span><span class="n">split</span><span class="p">(</span><span class="s">','</span><span class="p">)</span> <span class="p">)</span>

        <span class="k">elif</span> <span class="nb">len</span><span class="p">(</span><span class="n">fields</span><span class="p">[</span><span class="s">'tags'</span><span class="p">].</span><span class="n">split</span><span class="p">(</span><span class="s">','</span><span class="p">)</span> <span class="p">)</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span>
            <span class="n">tags</span> <span class="o">=</span> <span class="s">'[ %s ]'</span> <span class="o">%</span> <span class="n">fields</span><span class="p">[</span><span class="s">'tags'</span><span class="p">]</span>

        <span class="k">else</span> <span class="p">:</span>
            <span class="n">tags</span> <span class="o">=</span><span class="s">'[ ]'</span>



        <span class="n">date</span><span class="p">,</span> <span class="n">time</span> <span class="o">=</span> <span class="n">creation_date</span><span class="p">.</span><span class="n">split</span><span class="p">(</span><span class="s">'Z'</span><span class="p">)[</span><span class="mi">0</span><span class="p">].</span><span class="n">split</span><span class="p">(</span><span class="s">'T'</span><span class="p">)</span>
        <span class="n">year</span><span class="p">,</span> <span class="n">month</span><span class="p">,</span> <span class="n">day</span> <span class="o">=</span> <span class="n">date</span><span class="p">.</span><span class="n">split</span><span class="p">(</span><span class="s">'-'</span><span class="p">)</span>

        <span class="c1"># convert posts from HTML format into markdown for Jekyll
</span>        <span class="c1"># md_content = html2text.html2text(content)
</span>
        <span class="k">if</span> <span class="n">status</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
            <span class="n">status_name</span> <span class="o">=</span> <span class="s">'draft'</span>
        <span class="k">if</span> <span class="n">status</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span>
            <span class="n">status_name</span> <span class="o">=</span> <span class="s">'unpublished'</span>
        <span class="k">if</span> <span class="n">status</span> <span class="o">==</span> <span class="mi">2</span><span class="p">:</span>
            <span class="n">status_name</span> <span class="o">=</span> <span class="s">'published'</span>
        <span class="k">if</span> <span class="n">status</span> <span class="o">==</span> <span class="mi">3</span><span class="p">:</span>
            <span class="n">status_name</span> <span class="o">=</span> <span class="s">'other3'</span>

        <span class="k">if</span> <span class="n">status</span> <span class="ow">in</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">]:</span>
            <span class="n">filename</span> <span class="o">=</span> <span class="s">'%s'</span> <span class="o">%</span> <span class="p">(</span><span class="n">slug</span><span class="p">)</span>
            <span class="n">os</span><span class="p">.</span><span class="n">makedirs</span><span class="p">(</span><span class="s">'_drafts'</span><span class="p">,</span> <span class="n">exist_ok</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
            <span class="n">new_file</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s">'_drafts/%s.markdown'</span> <span class="o">%</span> <span class="n">filename</span><span class="p">,</span> <span class="s">'w'</span><span class="p">)</span>

        <span class="k">if</span> <span class="n">status</span> <span class="ow">in</span> <span class="p">[</span><span class="mi">2</span><span class="p">]:</span>
            <span class="n">filename</span> <span class="o">=</span> <span class="s">'%s-%s-%s-%s'</span> <span class="o">%</span> <span class="p">(</span><span class="n">year</span><span class="p">,</span><span class="n">month</span><span class="p">,</span><span class="n">day</span><span class="p">,</span><span class="n">slug</span><span class="p">)</span>
            <span class="n">os</span><span class="p">.</span><span class="n">makedirs</span><span class="p">(</span><span class="s">'_posts'</span><span class="p">,</span> <span class="n">exist_ok</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
            <span class="n">new_file</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s">'_posts/%s.markdown'</span> <span class="o">%</span> <span class="n">filename</span><span class="p">,</span> <span class="s">'w'</span><span class="p">)</span>


        <span class="c1"># create the file for the post and save it to either _posts or _drafts
</span>        <span class="n">header</span> <span class="o">=</span> <span class="s">'''---

layout: post
title: "%s"
date: %s %s +0900
categories: %s
tags: %s

---

%s
'''</span> <span class="o">%</span> <span class="p">(</span><span class="n">title</span><span class="p">,</span> <span class="n">date</span><span class="p">,</span> <span class="n">time</span><span class="p">,</span> <span class="n">categories</span><span class="p">,</span> <span class="n">tags</span><span class="p">,</span> <span class="n">content</span><span class="p">,)</span>
<span class="n">new_file</span><span class="p">.</span><span class="n">write</span><span class="p">(</span><span class="n">header</span><span class="p">)</span>
<span class="n">new_file</span><span class="p">.</span><span class="n">close</span><span class="p">()</span></code></pre></figure>

<p>각각의 포스트에 카테고리를 추가했으니 이제 그것을 사이트에서 분류해서 보이도록 하는 작업이 필요했다. <a href="https://jekyllrb-ko.github.io/docs/posts/#%ED%8F%AC%EC%8A%A4%ED%8A%B8%EC%9D%98-%EC%B9%B4%ED%85%8C%EA%B3%A0%EB%A6%AC%EC%99%80-%ED%83%9C%EA%B7%B8-%ED%91%9C%EC%8B%9C%ED%95%98%EA%B8%B0">Jekyll Doc</a>에서 해당 내용을 찾을 수 있었다. 추가된 코드는 Jekyll 루트 경로에 <code class="language-plaintext highlighter-rouge">category</code>폴더와 <code class="language-plaintext highlighter-rouge">_layouts</code>폴더를 추가하고 <code class="language-plaintext highlighter-rouge">_layouts/category.html</code>파일에 다음 내용을 작성한다.</p>

<figure class="highlight"><pre><code class="language-liquid" data-lang="liquid">---

## layout: page

<span class="p">{%</span><span class="w"> </span><span class="nt">for</span><span class="w"> </span><span class="nv">post</span><span class="w"> </span><span class="nt">in</span><span class="w"> </span><span class="nv">site.categories[page.category]</span><span class="w"> </span><span class="p">%}</span>
&lt;a href="<span class="p">{{</span><span class="w"> </span><span class="nv">post</span><span class="p">.</span><span class="nv">url</span><span class="w"> </span><span class="p">|</span><span class="w"> </span><span class="nf">absolute_url</span><span class="w"> </span><span class="p">}}</span>"&gt;
<span class="p">{{</span><span class="w"> </span><span class="nv">post</span><span class="p">.</span><span class="nv">title</span><span class="w"> </span><span class="p">}}</span>
&lt;/a&gt;
&lt;br&gt;
<span class="p">{%</span><span class="w"> </span><span class="nt">endfor</span><span class="w"> </span><span class="p">%}</span></code></pre></figure>

<p>그리고 <code class="language-plaintext highlighter-rouge">category</code>폴더에는 카테고리 목록에 따라, 예를 들어 study 카테고리라면, <code class="language-plaintext highlighter-rouge">category/study.html</code>파일에 다음과 같이 작성하도록 했다.</p>

<p>##</p>
<figure class="highlight"><pre><code class="language-liquid" data-lang="liquid">layout: category
title: study
category: study

---</code></pre></figure>

<p>여기부터는 각 포스트 파일을 직접 수정해 줘야 하는데, 조금 고단한 작업이었다. Jinja 구문의 예시 부분은 먼저 raw tag로 감싸준 후 다음과 같은 구문으로 감싸면 잘 적용된다.</p>

<figure class="highlight"><pre><code class="language-liquid" data-lang="liquid"><span class="p">{%</span><span class="w"> </span><span class="nt">highlight</span><span class="w"> </span>jinja<span class="w"> </span><span class="p">%}</span>
raw tag
(...)
endraw tag
<span class="p">{%</span><span class="w"> </span><span class="nt">endhighlight</span><span class="w"> </span><span class="p">%}</span></code></pre></figure>

<p>raw태그를 직접 여기에 나타낼 수가 없어 위와 같이 표현한 것이다. 이 블로그는 jekyll 기반이기 때문이다. 참고로 raw 태그는 jekyll에서 liquid 구문을 처리하지 않도록 한다.</p>

<p>어찌어찌 django zinnia blog에서 이렇게 이사에 성공했다. 이제는 기존의 템플릿을 여기에 적용시킬 차례다.</p>
:ET