I"a <p><em>안녕하세요, 매일프로그래밍 이번주 문제입니다.</em></p>

<p><em>String이 주어지면, 중복된 char가 없는 가장 긴 서브스트링 (substring)의 길이를 찾으시오.</em></p>

<p><em>Given a string, find the longest substring that does not have duplicate characters.</em></p>

<!--more-->

<p><em>예제)</em></p>

<p><em>Input: “aabcbcbc”</em></p>

<p><em>Output: 3 // “abc”</em></p>

<p><em>Input: “aaaaaaaa”</em></p>

<p><em>Output: 1 // “a”</em></p>

<p><em>Input: “abbbcedd”</em></p>

<p><em>Output: 4 // “bced”</em></p>

<p><em>풀이를 보고 싶으시다면 <a href="http://url6080.mailprogramming.com/wf/click?upn=5YNwhcR4-2FFhQA54IFFE-2FIijGnZEwyyYieIxIap6l3O-2F45Kr4FUGWF6dqpC95cdkgWkZdD4qQzq6jGRLPzeYD4U3UNKLhsE7ixWuvqFUNqkZIhgp5xi-2F6MgrMbnTDDj6FLR-2B-2FbdQFcarRHHIOHTx-2Br5gz6Be27YY1qPc9sdPx3Cs5Kcx0xBTPbqnmbrg8zaxs_Zgoc2ijnN3jtNTS7ITLZKrJdLqoKRo6qqLK1adFq7tfKml2T-2FZpRTvK762Qx0KqP8hZfNth1-2FWGeLDjC0MA6izvl1fraT6qr25VNJZqYSwrq4zqGE8ST-2Bk0JbVsP1IMZhRDh8pqGIbYZ9Gwru10xuH3-2FLuCxWdnJDOSTnGebrEA7G600IdwS1pAbWgA739CQJRAX7v9gP3njUO067uJh2-2FDRDLxthLGlfE16p9GhSMDDoVuMdwNVJ7i4xpXzli2a">풀이보기</a>를 눌러주세요.</em></p>

<p>연속으로 substring들을 수집하되 가장 긴 substring을 따로 저장하는 코드이다. <code class="language-plaintext highlighter-rouge">j</code>는 새로운 substring이 시작되는 위치이고, <code class="language-plaintext highlighter-rouge">length</code>는 그 substring의 길이를 나타낸다. 어떤 문자열이라도 길이가 0인 문자가 아니라면 최소 substring의 길이는 1일 것이므로 이를 초기값으로 했다.</p>

<figure class="highlight"><pre><code class="language-python" data-lang="python"><span class="k">def</span> <span class="nf">ans</span><span class="p">(</span><span class="n">string</span><span class="p">):</span>
<span class="n">max_length_str</span> <span class="o">=</span> <span class="s">''</span>
<span class="n">i</span> <span class="o">=</span> <span class="n">j</span> <span class="o">=</span> <span class="mi">0</span>
<span class="k">for</span> <span class="n">char</span> <span class="ow">in</span> <span class="n">string</span><span class="p">:</span>
<span class="k">if</span> <span class="n">i</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
<span class="n">length</span> <span class="o">=</span> <span class="mi">1</span>
<span class="n">i</span> <span class="o">+=</span> <span class="mi">1</span>
<span class="k">continue</span>
<span class="k">if</span> <span class="n">char</span> <span class="ow">in</span> <span class="n">string</span><span class="p">[</span><span class="n">j</span><span class="p">:</span><span class="n">j</span><span class="o">+</span><span class="n">length</span><span class="p">]:</span>
<span class="n">length</span> <span class="o">=</span> <span class="mi">1</span>
<span class="n">j</span> <span class="o">=</span> <span class="n">i</span>
<span class="k">else</span><span class="p">:</span>
<span class="n">length</span> <span class="o">+=</span> <span class="mi">1</span>
<span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">max_length_str</span><span class="p">)</span> <span class="o">&lt;</span> <span class="nb">len</span><span class="p">(</span><span class="n">string</span><span class="p">[</span><span class="n">j</span><span class="p">:</span><span class="n">j</span><span class="o">+</span><span class="n">length</span><span class="p">])</span> <span class="p">:</span>
<span class="n">max_length_str</span> <span class="o">=</span> <span class="n">string</span><span class="p">[</span><span class="n">j</span><span class="p">:</span><span class="n">j</span><span class="o">+</span><span class="n">length</span><span class="p">]</span>

        <span class="k">print</span><span class="p">(</span><span class="s">'{} {}'</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="n">string</span><span class="p">[</span><span class="n">j</span><span class="p">:</span><span class="n">j</span><span class="o">+</span><span class="n">length</span><span class="p">]))</span>
        <span class="n">i</span> <span class="o">+=</span> <span class="mi">1</span>
    <span class="k">return</span> <span class="n">max_length_str</span></code></pre></figure>

<p>그런데 만약 중복되지 않는 substring 중에 길이가 같은 게 있으면 어떻게 하는 것인가? 예를 들어 <code class="language-plaintext highlighter-rouge">abcdcba</code> 같은 경우 말이다. 여기에는 중복되지 않는 두 개의 substring, <code class="language-plaintext highlighter-rouge">abcd</code>와 <code class="language-plaintext highlighter-rouge">dcba</code>가 같은 길이로 2개 존재한다.</p>

<p>풀이를 보자. 아차, 문제에서 요구한 답은 조건을 만족하는 최대 substring의 <em>길이</em> 였다. <code class="language-plaintext highlighter-rouge">max_length_str</code>가 필요 없게 되었다. <code class="language-plaintext highlighter-rouge">length</code>값의 최대값만 구하면 될 것이다.</p>

<p>풀이에서는 자바의 해쉬맵을 사용했다. string의 각 char를 확인하여 해쉬맵에 있다면 substring의 시작 index를 그 다음 char의 인덱스로 두면 된다고 한다.</p>

<figure class="highlight"><pre><code class="language-python" data-lang="python"><span class="k">def</span> <span class="nf">sol</span><span class="p">(</span><span class="n">string</span><span class="p">):</span>
<span class="n">ret</span> <span class="o">=</span> <span class="n">start</span> <span class="o">=</span> <span class="mi">0</span>
<span class="n">s_dict</span> <span class="o">=</span> <span class="nb">dict</span><span class="p">()</span>
<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">string</span><span class="p">)):</span>
<span class="k">if</span> <span class="n">string</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="ow">in</span> <span class="n">s_dict</span>
<span class="n">start</span> <span class="o">=</span> <span class="nb">max</span><span class="p">(</span><span class="n">s_dict</span><span class="p">[</span><span class="n">string</span><span class="p">[</span><span class="n">i</span><span class="p">]],</span> <span class="n">start</span><span class="p">)</span>
<span class="n">ret</span> <span class="o">=</span> <span class="nb">max</span><span class="p">(</span><span class="n">ret</span><span class="p">,</span> <span class="n">i</span> <span class="o">-</span> <span class="n">start</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span>
<span class="n">s_dict</span><span class="p">[</span><span class="n">string</span><span class="p">[</span><span class="n">i</span><span class="p">]]</span> <span class="o">=</span> <span class="n">i</span> <span class="o">+</span> <span class="mi">1</span>
<span class="k">return</span> <span class="n">ret</span></code></pre></figure>

<p>매번 느끼는 것이지만 자바를 파이썬으로 바꾸면 코드가 짧아지는 경향이 있다.</p>

<p>자바 코드를 변환하다가 리스트를 일단 딕셔너리 형으로 바꿔야 하는 줄 알고 찾아보니 다음과 같은 방법이 있었다. 기억해놔야 겠다. 만약 리스트를 바로 { list[i] : i }와 같은 딕셔너리로 바꾸고 싶다면 사용하자.</p>

<figure class="highlight"><pre><code class="language-python" data-lang="python"><span class="n">s_dict</span> <span class="o">=</span> <span class="p">{</span> <span class="n">string</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="p">:</span> <span class="n">i</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">string</span><span class="p">))</span> <span class="p">}</span></code></pre></figure>

:ET